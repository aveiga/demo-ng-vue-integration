{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 343;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 343\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Renderer, OnInit, Inject, ElementRef} from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\ndeclare var MessageJS:any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'This is an Angular app simulating the Dashboard!';\n  show = true;\n  scriptTag = null;\n\n  //Widget metadata that can and should be retrieved from a service\n  widgetURL = \"http://localhost:8080/build.js\";\n  widgetContainerId = \"app\";\n  messageJS = MessageJS.getInstance();\n\n  constructor(\n    private _renderer2: Renderer,\n    @Inject(DOCUMENT) private _document,\n    private elementRef:ElementRef) {   \n      let that = this;\n      this.messageJS.register(this.onMessage);\n\n      setInterval(function(){\n        that.messageJS.message(\"hello from master, widget!\", \"vue-widget\");  \n      }, 5000);\n  }\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.querySelector('#widget-wrapper').innerHTML = this.buildWidgetContainerHTML();\n  }\n\n  onMessage(obj) {\n    console.log(obj);\n  }\n\n  toggleScript() {\n    if(this.elementRef.nativeElement.querySelector('script')) {\n\n      this.elementRef.nativeElement.removeChild(this.scriptTag);\n      this.elementRef.nativeElement.querySelector('#widget-wrapper').innerHTML = this.buildWidgetContainerHTML();\n    } else {\n\n      this.scriptTag = document.createElement(\"script\");\n      this.scriptTag.type = \"text/javascript\";\n      this.scriptTag.src = this.widgetURL;\n      this.elementRef.nativeElement.appendChild(this.scriptTag);\n    }\n\n  }\n\n  toggleWidget() {\n    this.show = !this.show;\n  }\n\n  buildWidgetContainerHTML () {\n    return \"<div id='\" + this.widgetContainerId + \"'></div>\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"#widget-wrapper {\\n    width: 700px;\\n    height: 300px;\\n    border: 3px solid steelblue;\\n    overflow: auto;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 609\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n<label>Change the title: </label>\\n<input [(ngModel)]=\\\"title\\\" style=\\\"width: 500px;\\\">\\n<br/>\\n<br/>\\n<button (click)=\\\"toggleScript()\\\">Toggle Script</button>\\n<button (click)=\\\"toggleWidget()\\\">Toggle Widget</button>\\n<br/>\\n<br/>\\n<h1>Bellow is an Widget</h1>\\n<div id=\\\"widget-wrapper\\\" [hidden]=\\\"!show\\\"></div>\\n<br/>\\n<br/>\\n<span>More Angular stuff...</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 610\n// module chunks = 1"],"sourceRoot":""}